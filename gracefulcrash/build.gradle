apply plugin: 'com.android.library'

def config = rootProject.extensions.getByName("ext") // Create variable to access "ext"

android {

    defaultPublishConfig config['defaultPublishConfig']

    compileSdkVersion config['compileSdkVersion']
    buildToolsVersion config['buildToolsVersion']

    defaultConfig {

        minSdkVersion             config['minSdkVersion']
        targetSdkVersion          config['targetSdkVersion']
        versionCode               config['versionCode']
        versionName               config['versionName']
        testInstrumentationRunner config['testInstrumentationRunner']

        // TODO PR: Add proper configuration here
//        buildConfigField ("String", "API_TEST_BASE_URL", "\"http://192.168.31.24/\"")
        // Add further default configurations here

    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    "$project.rootDir/tools/proguard-rules-debug.pro"
            buildConfigField (project.parentExceptionHandler, project.exceptionHandlerBuildParameter,
                    project.devExceptionHandler)
            // Add further debug configurations here
        }

        // Add a QA build type?

        release {
            debuggable false
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/proguard-rules.pro"
            buildConfigField (project.parentExceptionHandler, project.exceptionHandlerBuildParameter,
                    project.prodExceptionHandler)
            // Add further release configurations here
        }

    }

}

apply from: "$project.rootDir/tools/settings/development-settings.gradle"
// TODO PR: Missing Publish script
apply from: "$project.rootDir/tools/dependencies/script-gracefulcrash-dependencies-load.gradle"
